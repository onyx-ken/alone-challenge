spring:
  application:
    name: comment-bot
  profiles:
    group:
      local: local
      dev: dev, common
      prod: prod, common
      test: local

---

spring:
  config:
    activate:
      on-profile: local
  cloud:
    config:
      enabled: false
    bus:
      enabled: false
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: comment-auto
      auto-offset-reset: latest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
eureka:
  client:
    enabled: false
server:
  port: 8003
management:
  endpoints:
    web:
      exposure:
        include: none
  health:
    defaults:
      enabled: false

api:
  uri:
    comment:
      firstReply: http://localhost:3000/api/create-and-run-thread
      addReply: http://localhost:3000/api/add-reply

---

spring:
  config:
    activate:
      on-profile: common
server:
  port: 0
eureka:
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.instance_id:${random.value}}
    prefer-ip-address: true
management:
  endpoints:
    web:
      exposure:
        include: info, health, busrefresh

---

spring:
  config:
    activate:
      on-profile: dev
  cloud:
    config:
      uri: http://127.0.0.1:8888
      name: user
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

---

spring:
  config:
    activate:
      on-profile: prod
  cloud:
    config:
      uri: http://config-server:8888
      name: user
  rabbitmq:
    host: rabbitmq-server
    port: 5672
    username: prod_user
    password: prod_password
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

---

spring:
  config:
    activate:
      on-profile: test

  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers}
    consumer:
      group-id: testGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

api:
  uri:
    comment:
      firstReply: http://localhost:3000/api/create-and-run-thread
      addReply: http://localhost:3000/api/add-reply